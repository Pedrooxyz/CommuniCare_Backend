// <auto-generated />
using System;
using CommuniCare.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CommuniCare.Migrations
{
    [DbContext(typeof(CommuniCareContext))]
    [Migration("20250423165645_NomeDaMigracao6")]
    partial class NomeDaMigracao6
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CommuniCare.Models.Artigo", b =>
                {
                    b.Property<int>("ArtigoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("artigoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtigoId"));

                    b.Property<int?>("CustoCares")
                        .HasColumnType("int")
                        .HasColumnName("custoCares");

                    b.Property<string>("DescArtigo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descArtigo");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("LojaId")
                        .HasColumnType("int")
                        .HasColumnName("lojaID");

                    b.Property<string>("NomeArtigo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nomeArtigo");

                    b.Property<int>("QuantidadeDisponivel")
                        .HasColumnType("int");

                    b.Property<int?>("TransacaoId")
                        .HasColumnType("int")
                        .HasColumnName("transacaoID");

                    b.HasKey("ArtigoId")
                        .HasName("PK__Artigo__34661042A75121D9");

                    b.HasIndex("LojaId");

                    b.HasIndex("TransacaoId");

                    b.ToTable("Artigo", (string)null);
                });

            modelBuilder.Entity("CommuniCare.Models.Chat", b =>
                {
                    b.Property<int>("ChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("chatID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChatId"));

                    b.Property<int>("UtilizadorId")
                        .HasColumnType("int")
                        .HasColumnName("utilizadorID");

                    b.HasKey("ChatId")
                        .HasName("PK__Chat__8263854DE07F2A4F");

                    b.HasIndex("UtilizadorId");

                    b.ToTable("Chat", (string)null);
                });

            modelBuilder.Entity("CommuniCare.Models.Contacto", b =>
                {
                    b.Property<int>("ContactoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("contactoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactoId"));

                    b.Property<string>("NumContacto")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("numContacto");

                    b.Property<int>("TipoContactoId")
                        .HasColumnType("int")
                        .HasColumnName("tipoContactoID");

                    b.Property<int>("UtilizadorId")
                        .HasColumnType("int")
                        .HasColumnName("utilizadorID");

                    b.HasKey("ContactoId")
                        .HasName("PK__Contacto__0ECCADC7FB690AAD");

                    b.HasIndex("TipoContactoId");

                    b.HasIndex("UtilizadorId");

                    b.ToTable("Contacto", (string)null);
                });

            modelBuilder.Entity("CommuniCare.Models.Cp", b =>
                {
                    b.Property<string>("CPostal")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CPostal");

                    b.Property<string>("Localidade")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Localidade");

                    b.HasKey("CPostal")
                        .HasName("PK__CP__F5B22BE63663255C");

                    b.ToTable("CP", (string)null);
                });

            modelBuilder.Entity("CommuniCare.Models.Emprestimo", b =>
                {
                    b.Property<int>("EmprestimoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("emprestimoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmprestimoId"));

                    b.Property<DateTime?>("DataDev")
                        .HasColumnType("datetime")
                        .HasColumnName("dataDev");

                    b.Property<DateTime?>("DataIni")
                        .HasColumnType("datetime")
                        .HasColumnName("dataIni");

                    b.Property<int?>("TransacaoId")
                        .HasColumnType("int")
                        .HasColumnName("transacaoID");

                    b.HasKey("EmprestimoId")
                        .HasName("PK__Empresti__D470E7830BFF4320");

                    b.HasIndex("TransacaoId");

                    b.ToTable("Emprestimo", (string)null);
                });

            modelBuilder.Entity("CommuniCare.Models.ItemEmprestimo", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("itemID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<int?>("ComissaoCares")
                        .HasColumnType("int")
                        .HasColumnName("comissaoCares");

                    b.Property<string>("DescItem")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descItem");

                    b.Property<byte?>("Disponivel")
                        .HasColumnType("tinyint")
                        .HasColumnName("disponivel");

                    b.Property<string>("NomeItem")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nomeItem");

                    b.Property<int>("idEmprestador")
                        .HasColumnType("int");

                    b.HasKey("ItemId")
                        .HasName("PK__ItemEmpr__56A1284AB54FF227");

                    b.ToTable("ItemEmprestimo", (string)null);
                });

            modelBuilder.Entity("CommuniCare.Models.ItemEmprestimoUtilizador", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("itemID");

                    b.Property<int>("UtilizadorId")
                        .HasColumnType("int")
                        .HasColumnName("utilizadorID");

                    b.Property<string>("TipoRelacao")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("tipoRelacao");

                    b.HasKey("ItemId", "UtilizadorId")
                        .HasName("PK_ItemEmprestimo_Utilizador");

                    b.HasIndex("UtilizadorId");

                    b.ToTable("ItemEmprestimoUtilizador", (string)null);
                });

            modelBuilder.Entity("CommuniCare.Models.Loja", b =>
                {
                    b.Property<int>("LojaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("lojaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LojaId"));

                    b.Property<string>("DescLoja")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descLoja");

                    b.Property<string>("NomeLoja")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nomeLoja");

                    b.HasKey("LojaId")
                        .HasName("PK__Loja__E00D7703297E42E3");

                    b.ToTable("Loja", (string)null);
                });

            modelBuilder.Entity("CommuniCare.Models.Mensagem", b =>
                {
                    b.Property<int>("MensagemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("mensagemID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MensagemId"));

                    b.Property<int>("ChatId")
                        .HasColumnType("int")
                        .HasColumnName("chatID");

                    b.Property<string>("Conteudo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("conteudo");

                    b.Property<DateTime?>("DataEnvio")
                        .HasColumnType("datetime")
                        .HasColumnName("dataEnvio");

                    b.HasKey("MensagemId")
                        .HasName("PK__Mensagem__8419FF1A3FB0425E");

                    b.HasIndex("ChatId");

                    b.ToTable("Mensagem", (string)null);
                });

            modelBuilder.Entity("CommuniCare.Models.Morada", b =>
                {
                    b.Property<int>("MoradaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("moradaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MoradaId"));

                    b.Property<string>("CPostal")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CPID");

                    b.Property<int?>("NumPorta")
                        .HasColumnType("int")
                        .HasColumnName("numPorta");

                    b.Property<string>("Rua")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("rua");

                    b.HasKey("MoradaId")
                        .HasName("PK__Morada__5BDD9AB29A5F23DC");

                    b.HasIndex("CPostal");

                    b.ToTable("Morada");
                });

            modelBuilder.Entity("CommuniCare.Models.Notificacao", b =>
                {
                    b.Property<int>("NotificacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("notificacaoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificacaoId"));

                    b.Property<DateTime?>("DataMensagem")
                        .HasColumnType("datetime")
                        .HasColumnName("dataMensagem");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("itemID");

                    b.Property<byte?>("Lida")
                        .HasColumnType("tinyint")
                        .HasColumnName("lida");

                    b.Property<string>("Mensagem")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("mensagem");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("int")
                        .HasColumnName("pedidoID");

                    b.Property<int>("UtilizadorId")
                        .HasColumnType("int")
                        .HasColumnName("utilizadorID");

                    b.HasKey("NotificacaoId")
                        .HasName("PK__Notifica__A917F5716C707642");

                    b.HasIndex("ItemId");

                    b.HasIndex("PedidoId");

                    b.HasIndex("UtilizadorId");

                    b.ToTable("Notificacao", (string)null);
                });

            modelBuilder.Entity("CommuniCare.Models.PedidoAjuda", b =>
                {
                    b.Property<int>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pedidoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PedidoId"));

                    b.Property<string>("DescPedido")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descPedido");

                    b.Property<int>("Estado")
                        .HasColumnType("int")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("HorarioAjuda")
                        .HasColumnType("datetime")
                        .HasColumnName("horarioAjuda");

                    b.Property<int?>("NHoras")
                        .HasColumnType("int")
                        .HasColumnName("nHoras");

                    b.Property<int?>("NPessoas")
                        .HasColumnType("int")
                        .HasColumnName("nPessoas");

                    b.Property<int?>("RecompensaCares")
                        .HasColumnType("int")
                        .HasColumnName("recompensaCares");

                    b.Property<int?>("TransacaoId")
                        .HasColumnType("int")
                        .HasColumnName("transacaoID");

                    b.Property<int>("UtilizadorId")
                        .HasColumnType("int")
                        .HasColumnName("utilizadorID");

                    b.HasKey("PedidoId")
                        .HasName("PK__PedidoAj__BAF07AE4789D03F6");

                    b.HasIndex("TransacaoId");

                    b.HasIndex("UtilizadorId");

                    b.ToTable("PedidosAjuda");
                });

            modelBuilder.Entity("CommuniCare.Models.TipoContacto", b =>
                {
                    b.Property<int>("TipoContactoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tipoContactoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoContactoId"));

                    b.Property<string>("DescContacto")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descContacto");

                    b.HasKey("TipoContactoId")
                        .HasName("PK__TipoCont__CC154D73604D5E90");

                    b.ToTable("TipoContacto", (string)null);
                });

            modelBuilder.Entity("CommuniCare.Models.TipoUtilizador", b =>
                {
                    b.Property<int>("TipoUtilizadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tipoUtilizadorID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoUtilizadorId"));

                    b.Property<string>("DescTU")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descTU");

                    b.HasKey("TipoUtilizadorId")
                        .HasName("PK__TipoUtil__A479CAE646541112");

                    b.ToTable("TipoUtilizador", (string)null);
                });

            modelBuilder.Entity("CommuniCare.Models.Transacao", b =>
                {
                    b.Property<int>("TransacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("transacaoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransacaoId"));

                    b.Property<DateTime?>("DataTransacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dataTransacao");

                    b.Property<int?>("Quantidade")
                        .HasColumnType("int")
                        .HasColumnName("quantidade");

                    b.HasKey("TransacaoId")
                        .HasName("PK__Transaca__EA9168CEEAA2B152");

                    b.ToTable("Transacao", (string)null);
                });

            modelBuilder.Entity("CommuniCare.Models.TransacaoAjuda", b =>
                {
                    b.Property<int>("TransacaoId")
                        .HasColumnType("int")
                        .HasColumnName("transacaoID");

                    b.Property<int?>("RecetorTran")
                        .HasColumnType("int")
                        .HasColumnName("recetorTran");

                    b.HasKey("TransacaoId")
                        .HasName("PK__Transaca__EA9168CE1D5A6645");

                    b.ToTable("TransacaoAjuda");
                });

            modelBuilder.Entity("CommuniCare.Models.TransacaoEmprestimo", b =>
                {
                    b.Property<int>("TransacaoId")
                        .HasColumnType("int")
                        .HasColumnName("transacaoID");

                    b.Property<int?>("NHoras")
                        .HasColumnType("int")
                        .HasColumnName("nHoras");

                    b.Property<int?>("PagaTran")
                        .HasColumnType("int")
                        .HasColumnName("pagaTran");

                    b.Property<int?>("RecetorTran")
                        .HasColumnType("int")
                        .HasColumnName("recetorTran");

                    b.HasKey("TransacaoId")
                        .HasName("PK__Transaca__EA9168CEB369504C");

                    b.ToTable("TransacoesEmprestimo");
                });

            modelBuilder.Entity("CommuniCare.Models.Utilizador", b =>
                {
                    b.Property<int>("UtilizadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("utilizadorID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UtilizadorId"));

                    b.Property<int>("MoradaId")
                        .HasColumnType("int")
                        .HasColumnName("moradaID");

                    b.Property<string>("NomeUtilizador")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nomeUtilizador");

                    b.Property<int?>("NumCares")
                        .HasColumnType("int")
                        .HasColumnName("numCares");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<int>("TipoUtilizadorId")
                        .HasColumnType("int")
                        .HasColumnName("tipoUtilizadorID");

                    b.HasKey("UtilizadorId")
                        .HasName("PK__Utilizad__F61D8917D5DAE25F");

                    b.HasIndex("MoradaId");

                    b.HasIndex("TipoUtilizadorId");

                    b.ToTable("Utilizador", (string)null);
                });

            modelBuilder.Entity("CommuniCare.Models.Venda", b =>
                {
                    b.Property<int>("TransacaoId")
                        .HasColumnType("int")
                        .HasColumnName("transacaoID");

                    b.Property<int?>("NArtigos")
                        .HasColumnType("int")
                        .HasColumnName("nArtigos");

                    b.Property<int>("UtilizadorId")
                        .HasColumnType("int")
                        .HasColumnName("utilizadorID");

                    b.HasKey("TransacaoId")
                        .HasName("PK__Venda__EA9168CECCA8D27D");

                    b.HasIndex("UtilizadorId");

                    b.ToTable("Venda");
                });

            modelBuilder.Entity("CommuniCare.Models.Voluntariado", b =>
                {
                    b.Property<int>("PedidoId")
                        .HasColumnType("int")
                        .HasColumnName("pedidoID");

                    b.Property<int>("UtilizadorId")
                        .HasColumnType("int")
                        .HasColumnName("utilizadorID");

                    b.Property<int>("IdVoluntariado")
                        .HasColumnType("int")
                        .HasColumnName("idVoluntariado");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.HasKey("PedidoId", "UtilizadorId", "IdVoluntariado")
                        .HasName("PK__Voluntar__A4B38AAC16F79537");

                    b.HasIndex("UtilizadorId");

                    b.ToTable("Voluntariado", (string)null);
                });

            modelBuilder.Entity("EmprestimoItemEmprestimo", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("itemID");

                    b.Property<int>("EmprestimoId")
                        .HasColumnType("int")
                        .HasColumnName("emprestimoID");

                    b.HasKey("ItemId", "EmprestimoId")
                        .HasName("PK__Empresti__7BE62632FBE4295A");

                    b.HasIndex("EmprestimoId");

                    b.ToTable("Emprestimo_ItemEmprestimo", (string)null);
                });

            modelBuilder.Entity("CommuniCare.Models.Artigo", b =>
                {
                    b.HasOne("CommuniCare.Models.Loja", "Loja")
                        .WithMany("Artigos")
                        .HasForeignKey("LojaId")
                        .IsRequired()
                        .HasConstraintName("FKArtigo399404");

                    b.HasOne("CommuniCare.Models.Venda", "Transacao")
                        .WithMany("Artigos")
                        .HasForeignKey("TransacaoId")
                        .HasConstraintName("FKArtigo680902");

                    b.Navigation("Loja");

                    b.Navigation("Transacao");
                });

            modelBuilder.Entity("CommuniCare.Models.Chat", b =>
                {
                    b.HasOne("CommuniCare.Models.Utilizador", "Utilizador")
                        .WithMany("Chats")
                        .HasForeignKey("UtilizadorId")
                        .IsRequired()
                        .HasConstraintName("FKChat902984");

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("CommuniCare.Models.Contacto", b =>
                {
                    b.HasOne("CommuniCare.Models.TipoContacto", "TipoContacto")
                        .WithMany("Contactos")
                        .HasForeignKey("TipoContactoId")
                        .IsRequired()
                        .HasConstraintName("FKContacto906402");

                    b.HasOne("CommuniCare.Models.Utilizador", "Utilizador")
                        .WithMany("Contactos")
                        .HasForeignKey("UtilizadorId")
                        .IsRequired()
                        .HasConstraintName("FKContacto995974");

                    b.Navigation("TipoContacto");

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("CommuniCare.Models.Emprestimo", b =>
                {
                    b.HasOne("CommuniCare.Models.TransacaoEmprestimo", "Transacao")
                        .WithMany("Emprestimos")
                        .HasForeignKey("TransacaoId")
                        .HasConstraintName("FKEmprestimo891193");

                    b.Navigation("Transacao");
                });

            modelBuilder.Entity("CommuniCare.Models.ItemEmprestimoUtilizador", b =>
                {
                    b.HasOne("CommuniCare.Models.ItemEmprestimo", "ItemEmprestimo")
                        .WithMany("ItemEmprestimoUtilizadores")
                        .HasForeignKey("ItemId")
                        .IsRequired()
                        .HasConstraintName("FK_ItemEmprestimo_Utilizador_ItemEmprestimo");

                    b.HasOne("CommuniCare.Models.Utilizador", "Utilizador")
                        .WithMany("ItemEmprestimoUtilizadores")
                        .HasForeignKey("UtilizadorId")
                        .IsRequired()
                        .HasConstraintName("FK_ItemEmprestimo_Utilizador_Utilizador");

                    b.Navigation("ItemEmprestimo");

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("CommuniCare.Models.Mensagem", b =>
                {
                    b.HasOne("CommuniCare.Models.Chat", "Chat")
                        .WithMany("Mensagems")
                        .HasForeignKey("ChatId")
                        .IsRequired()
                        .HasConstraintName("FKMensagem208498");

                    b.Navigation("Chat");
                });

            modelBuilder.Entity("CommuniCare.Models.Morada", b =>
                {
                    b.HasOne("CommuniCare.Models.Cp", "Cp")
                        .WithMany("Morada")
                        .HasForeignKey("CPostal")
                        .HasConstraintName("FKMorada368657");

                    b.Navigation("Cp");
                });

            modelBuilder.Entity("CommuniCare.Models.Notificacao", b =>
                {
                    b.HasOne("CommuniCare.Models.ItemEmprestimo", "Item")
                        .WithMany("Notificacaos")
                        .HasForeignKey("ItemId")
                        .HasConstraintName("FKNotificaca657866");

                    b.HasOne("CommuniCare.Models.PedidoAjuda", "Pedido")
                        .WithMany("Notificacaos")
                        .HasForeignKey("PedidoId")
                        .HasConstraintName("FKNotificaca469461");

                    b.HasOne("CommuniCare.Models.Utilizador", "Utilizador")
                        .WithMany("Notificacaos")
                        .HasForeignKey("UtilizadorId")
                        .IsRequired()
                        .HasConstraintName("FKNotificaca99191");

                    b.Navigation("Item");

                    b.Navigation("Pedido");

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("CommuniCare.Models.PedidoAjuda", b =>
                {
                    b.HasOne("CommuniCare.Models.TransacaoAjuda", "Transacao")
                        .WithMany("PedidoAjuda")
                        .HasForeignKey("TransacaoId")
                        .HasConstraintName("FKPedidoAjud864110");

                    b.HasOne("CommuniCare.Models.Utilizador", "Utilizador")
                        .WithMany("PedidoAjuda")
                        .HasForeignKey("UtilizadorId")
                        .IsRequired()
                        .HasConstraintName("FKPedidoAjud452367");

                    b.Navigation("Transacao");

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("CommuniCare.Models.TransacaoAjuda", b =>
                {
                    b.HasOne("CommuniCare.Models.Transacao", "Transacao")
                        .WithOne("TransacaoAjuda")
                        .HasForeignKey("CommuniCare.Models.TransacaoAjuda", "TransacaoId")
                        .IsRequired()
                        .HasConstraintName("FKTransacaoA7406");

                    b.Navigation("Transacao");
                });

            modelBuilder.Entity("CommuniCare.Models.TransacaoEmprestimo", b =>
                {
                    b.HasOne("CommuniCare.Models.Transacao", "Transacao")
                        .WithOne("TransacaoEmprestimo")
                        .HasForeignKey("CommuniCare.Models.TransacaoEmprestimo", "TransacaoId")
                        .IsRequired()
                        .HasConstraintName("FKTransacaoE589588");

                    b.Navigation("Transacao");
                });

            modelBuilder.Entity("CommuniCare.Models.Utilizador", b =>
                {
                    b.HasOne("CommuniCare.Models.Morada", "Morada")
                        .WithMany("Utilizadores")
                        .HasForeignKey("MoradaId")
                        .IsRequired()
                        .HasConstraintName("FKUtilizador388471");

                    b.HasOne("CommuniCare.Models.TipoUtilizador", "TipoUtilizador")
                        .WithMany("Utilizadors")
                        .HasForeignKey("TipoUtilizadorId")
                        .IsRequired()
                        .HasConstraintName("FKUtilizador319669");

                    b.Navigation("Morada");

                    b.Navigation("TipoUtilizador");
                });

            modelBuilder.Entity("CommuniCare.Models.Venda", b =>
                {
                    b.HasOne("CommuniCare.Models.Transacao", "Transacao")
                        .WithOne("Venda")
                        .HasForeignKey("CommuniCare.Models.Venda", "TransacaoId")
                        .IsRequired()
                        .HasConstraintName("FKVenda552087");

                    b.HasOne("CommuniCare.Models.Utilizador", "Utilizador")
                        .WithMany("Venda")
                        .HasForeignKey("UtilizadorId")
                        .IsRequired()
                        .HasConstraintName("FKVenda344605");

                    b.Navigation("Transacao");

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("CommuniCare.Models.Voluntariado", b =>
                {
                    b.HasOne("CommuniCare.Models.PedidoAjuda", "Pedido")
                        .WithMany("Voluntariados")
                        .HasForeignKey("PedidoId")
                        .IsRequired()
                        .HasConstraintName("FKVoluntaria267537");

                    b.HasOne("CommuniCare.Models.Utilizador", "Utilizador")
                        .WithMany("Voluntariados")
                        .HasForeignKey("UtilizadorId")
                        .IsRequired()
                        .HasConstraintName("FKVoluntaria135401");

                    b.Navigation("Pedido");

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("EmprestimoItemEmprestimo", b =>
                {
                    b.HasOne("CommuniCare.Models.Emprestimo", null)
                        .WithMany()
                        .HasForeignKey("EmprestimoId")
                        .IsRequired()
                        .HasConstraintName("FKEmprestimo135708");

                    b.HasOne("CommuniCare.Models.ItemEmprestimo", null)
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .IsRequired()
                        .HasConstraintName("FKEmprestimo851433");
                });

            modelBuilder.Entity("CommuniCare.Models.Chat", b =>
                {
                    b.Navigation("Mensagems");
                });

            modelBuilder.Entity("CommuniCare.Models.Cp", b =>
                {
                    b.Navigation("Morada");
                });

            modelBuilder.Entity("CommuniCare.Models.ItemEmprestimo", b =>
                {
                    b.Navigation("ItemEmprestimoUtilizadores");

                    b.Navigation("Notificacaos");
                });

            modelBuilder.Entity("CommuniCare.Models.Loja", b =>
                {
                    b.Navigation("Artigos");
                });

            modelBuilder.Entity("CommuniCare.Models.Morada", b =>
                {
                    b.Navigation("Utilizadores");
                });

            modelBuilder.Entity("CommuniCare.Models.PedidoAjuda", b =>
                {
                    b.Navigation("Notificacaos");

                    b.Navigation("Voluntariados");
                });

            modelBuilder.Entity("CommuniCare.Models.TipoContacto", b =>
                {
                    b.Navigation("Contactos");
                });

            modelBuilder.Entity("CommuniCare.Models.TipoUtilizador", b =>
                {
                    b.Navigation("Utilizadors");
                });

            modelBuilder.Entity("CommuniCare.Models.Transacao", b =>
                {
                    b.Navigation("TransacaoAjuda");

                    b.Navigation("TransacaoEmprestimo");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("CommuniCare.Models.TransacaoAjuda", b =>
                {
                    b.Navigation("PedidoAjuda");
                });

            modelBuilder.Entity("CommuniCare.Models.TransacaoEmprestimo", b =>
                {
                    b.Navigation("Emprestimos");
                });

            modelBuilder.Entity("CommuniCare.Models.Utilizador", b =>
                {
                    b.Navigation("Chats");

                    b.Navigation("Contactos");

                    b.Navigation("ItemEmprestimoUtilizadores");

                    b.Navigation("Notificacaos");

                    b.Navigation("PedidoAjuda");

                    b.Navigation("Venda");

                    b.Navigation("Voluntariados");
                });

            modelBuilder.Entity("CommuniCare.Models.Venda", b =>
                {
                    b.Navigation("Artigos");
                });
#pragma warning restore 612, 618
        }
    }
}
